<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.okdi.api.dao.MemberTagMapper" >
  <resultMap id="BaseResultMap" type="net.okdi.api.entity.MemberTag" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 28 13:08:38 CST 2014.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="tag_name" property="tagName" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="sort" property="sort" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 28 13:08:38 CST 2014.
    -->
    id, tag_name, create_user_id, create_time, sort
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="net.okdi.api.entity.MemberTag" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 28 13:08:38 CST 2014.
    -->
    delete from member_tag
    where id = #{id,jdbcType=BIGINT}
          and create_user_id = #{createUserId}
  </delete>
  <insert id="insert" parameterType="net.okdi.api.entity.MemberTag" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Oct 28 13:08:38 CST 2014.
    -->
    insert into member_tag (id, tag_name, create_user_id, 
      create_time, sort)
    values (#{id,jdbcType=BIGINT}, #{tagName,jdbcType=VARCHAR}, #{createUserId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{sort,jdbcType=DOUBLE})
  </insert>
  <select id="getMemberTagByMemberId" parameterType="java.lang.Long" resultType="java.util.Map">
  select id as groupId, tag_name as groupName, create_user_id as createUserId, create_time as createTime, sort from member_tag where create_user_id = #{memberId} or id in (5,6,8)
  </select>
  <update id="updateMemberGroupName" parameterType="java.util.Map">
   update member_tag set tag_name = #{tagName} where create_user_id = #{memberId} and id = #{tagId}
  </update>
  <select id="getMemberGroupJDW" parameterType="java.util.Map" resultType="java.util.Map">
select 
count(a.id) as countNumb,mt.id as groupId, mt.tag_name as groupName, mt.create_user_id as createUserId, mt.create_time as createTime, mt.sort 
from member_tag  mt 
LEFT JOIN member_contact_tag_relation ctr on mt.id = ctr.tag_id 
LEFT JOIN 
(select * from member_contact where create_user_id = #{memberId}  ) a
on ctr.contact_id = a.id  
where 1=1 and mt.create_user_id = #{memberId} or mt.id in(1,2,3,4) GROUP BY mt.tag_name
<!--   select id as groupId, tag_name as groupName, create_user_id as createUserId, create_time as createTime, sort from member_tag where create_user_id = #{memberId} or id in(1,2,3,4)  -->
  </select>
  <select id="getMemberId" parameterType="java.lang.String" resultType="java.lang.Long">
   select member_id from member_info where member_phone = #{phone} limit 0,1
  </select>

</mapper>