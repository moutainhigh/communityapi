<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
	default-lazy-init="true">


<context:annotation-config/>
	<context:component-scan base-package="net.**.service" />
	<context:property-placeholder location="classpath*:/constant_config.properties"
		ignore-unresolvable="true" />
	<import resource="applicationContext-mongo.xml"/>
	<import resource="applicationContext-rabbitmq.xml"/>
	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc_url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc_initialSize}" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="${jdbc_maxActive}" />
		<!-- 连接池最大空闲 -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000" />

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat,log4j" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
		scope="prototype">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="queryService" class="net.okdi.core.base.QueryServiceImpl">
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate" />
	</bean>
	<!-- ****************************************ehcache相关配置**************************************************** -->
	<!--  <bean id="ehcacheService" class="net.okdi.core.common.ehcache.EhcacheServiceImpl"/>
	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation">
			<value>classpath:ehcache.xml</value>
		</property>
	</bean>-->
	<!-- ****************************************ehcache相关配置end **********************************************  -->
	
	
	
	
		<!-- *********************redis相关配置*************************** -->
	<bean id="ehcacheService" class="net.okdi.core.common.redis.RedisServiceImpl"/> 
 	<bean id="redisService" class="net.okdi.core.common.redis.RedisServiceImpl"/>
	<context:property-placeholder location="classpath:/redis.properties"
	ignore-unresolvable="true" />
	<bean id="jedisConfig" class="redis.clients.jedis.JedisPoolConfig"> 
		<property name="maxTotal" value="${redis_max_active}"></property>
		<property name="maxIdle" value="${redis_max_idle}"></property>
		<property name="maxWaitMillis" value="${redis_max_wait}"></property>
		<property name="testOnBorrow" value="${redis_test_on_borrow}"></property>
	</bean>
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis_addr}"></property>
		<property name="port" value="${redis_port}"></property>
		<property name="password" value="${redis_auth}"></property>
		<property name="poolConfig" ref="jedisConfig"></property>
		<property name="database" value="${redis_database}"></property>
	</bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<!-- 如果不配置Serializer，那么存储的时候智能使用String，如果用User类型存储，那么会提示错误User can't cast to String！！！ -->
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>	
	
	<bean id="redisConstant" class="net.okdi.core.common.redis.RedisConstant">
		<constructor-arg>
   			<map>
   				<entry key="smsRecordCache" value="31" />
   				<entry key="onLineMember" value="-1"/>
   				<entry key="netPriceCache" value="86400"/>
   				<entry key="expressPriceCache" value="86400"/>
   				<entry key="nearCompAndPersionCache" value="300"/>
   				<entry key="compSendRangeCache" value="3600"/>
   				<entry key="compElectronicFenceCache" value="3600"/>
   				<entry key="nearSiteCache" value="3600"/>
   				<entry key="appVersionInfoCacheOfExpress" value="600"/>
    			<!-- <entry key="compBusinessCache" value="300" />
    			<entry key="compAuditCache" value="300" />
    			<entry key="compImageCache" value="300" />
    			<entry key="compCoordinateCache" value="300" />
    			<entry key="compFenceCache" value="300" />
    			<entry key="areaFenceCache" value="300" />
    			<entry key="relevantAddressCache" value="300" />
    			<entry key="netCoverExceedAddress" value="300" />
    			<entry key="promptCompCache" value="300" />
    			<entry key="sameCompNameCache" value="300" />
    			<entry key="employeeCache" value="300" />
    			<entry key="resumCache" value="300" />
    			<entry key="memberAndBranchCache" value="300" />
    			<entry key="memberInfochCache" value="300" />
    			<entry key="memberInfoMobilechCache" value="300" />
    			<entry key="unBranchCache" value="300" />
    			<entry key="expRelationCache" value="300" />
    			<entry key="expAllRelationCache" value="300" />
    			<entry key="isHavingCache" value="300" />
    			<entry key="expCompLogCache" value="300" />
    			<entry key="expLogCacheByCompId" value="300" />
    			<entry key="memberInfoForFhwCache" value="300" />
    			<entry key="parlogisticTraceCache" value="300" />
    			<entry key="parlogisticSearchCache" value="300" />
    			<entry key="bilTemplateSetCache" value="300" />
    			<entry key="contactGroupCache" value="300" />
    			<entry key="contactListCache" value="300" />
    			<entry key="contactInfoCache" value="300" />
    			<entry key="contactListKeyCache" value="300" />
    			<entry key="contactCommList" value="300" />
    			<entry key="contactAddressList" value="300" />
    			<entry key="memberDefulatAddress" value="300" />
    			<entry key="nearCompAndPersionCache" value="300" />
    			<entry key="autoSuggest" value="300" />
    			<entry key="autoSuggestKey" value="300" />
    			<entry key="onLineMember" value="300" />
    			<entry key="customerInfoCache" value="300" />
    			<entry key="employeeRelationCache" value="300" />
    			<entry key="compSendRangeCache" value="300" />
    			<entry key="compElectronicFenceCache" value="300" />
    			<entry key="nearSiteCache" value="300" />
    			<entry key="TakeTaskCacheTaskInfo" value="300" />
    			<entry key="TakeTaskCacheTaskProcess" value="300" />
    			<entry key="TakeTaskCacheTaskProcessResult" value="300" />
    			<entry key="TakeTaskCacheTaskRecord" value="300" />
    			<entry key="TakeTaskCacheQueryResult" value="300" />
    			<entry key="TakeTaskCacheRecordResult" value="300" />
    			<entry key="TakeTaskCacheRecordResultByMemberId" value="300" />
    			<entry key="TakeTaskCacheUnTakeCount" value="300" />
    			<entry key="TakeTaskCacheTaskRecordResult" value="300" />
    			<entry key="parcelInfoCache" value="300" />
    			<entry key="parcelAddressCache" value="300" />
    			<entry key="parcelIdCacheByExpWayBillNumAndNetId" value="300" />
    			<entry key="parcelIdsCacheByMemberId" value="300" />
    			<entry key="expressserviceCache" value="300" /> -->
   			</map>
  		</constructor-arg>
	</bean>
	<!-- *********************redis相关配置*************************** -->
	
	

	<!--发送短信-->
	<bean id="noticeHttpClient" class="net.okdi.core.sms.NoticeHttpClient" />
	<bean id="wechatMpHttpClient" class="net.okdi.core.sms.WechatMpHttpClient" />

	<bean id="openPlatformJsonHttpClient" class="net.okdi.core.httpclient.OkdiOpenPlatformRawJsonHttpClient"/>
	<bean id="openPlatformHttpClient" class="net.okdi.core.sms.OpenPlatformHttpClient" />
	<!-- 使用自动扫描包的方式来注册各种Mapper ，配置如下： -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="net.**.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

<!-- 	<aop:aspectj-autoproxy proxy-target-class="true" /> -->
 
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<!-- <tx:method name="query*" read-only="true" /> -->
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<!--把事务控制在Service层-->
		<aop:pointcut id="allServiceMethod"
			expression="execution(* net.okdi.*.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allServiceMethod" />
	</aop:config>
	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- httpClient连接池 -->
	<bean id="pollingConnectionManager"
		class="org.apache.http.impl.conn.PoolingHttpClientConnectionManager">
		<property name="maxTotal" value="200" />
		<property name="defaultMaxPerRoute" value="20" />
	</bean>

	<!-- 使用httpbuilder构造合适的http方法 -->
	<bean id="httpClientBuilder" class="org.apache.http.impl.client.HttpClientBuilder"
		factory-method="create">
		<property name="connectionManager" ref="pollingConnectionManager" />
	</bean>

	<bean id="httpClient" factory-bean="httpClientBuilder"
		factory-method="build" />
	
	<!-- 配置httpClient的连接工厂 -->
	<bean id="clientHttpRequestFactory"
		class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
		<constructor-arg ref="httpClient" />
		<property name="connectTimeout" value="10000" />
		<property name="readTimeout" value="10000" />
	</bean>

	<beans profile="dev">
		<context:property-placeholder location="classpath*:/config_develop.properties"
			ignore-unresolvable="true" />
	</beans>

	<beans profile="prod">
		<context:property-placeholder
			location="classpath*:/config_production.properties"
			ignore-unresolvable="true" />
	</beans>
	<beans profile="test">
		<context:property-placeholder location="classpath*:/config_test.properties"
			ignore-unresolvable="true" />
	</beans>
</beans>