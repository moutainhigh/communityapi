<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.okdi.apiV1.dao.MemberInvitationRegisterMapper" >
  <resultMap id="BaseResultMap" type="net.okdi.apiV1.entity.MemberInvitationRegister" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="from_member_id" property="fromMemberId" jdbcType="BIGINT" />
    <result column="from_member_phone" property="fromMemberPhone" jdbcType="VARCHAR" />
    <result column="from_member_role_id" property="fromMemberRoleId" jdbcType="SMALLINT" />
    <result column="to_member_phone" property="toMemberPhone" jdbcType="VARCHAR" />
    <result column="to_member_role_id" property="toMemberRoleId" jdbcType="SMALLINT" />
    <result column="to_member_net_id" property="toMemberNetId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modity_time" property="modityTime" jdbcType="TIMESTAMP" />
    <result column="is_registered" property="isRegistered" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, from_member_id, from_member_phone, from_member_role_id, to_member_phone, to_member_role_id, 
    to_member_net_id, create_time, modity_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.okdi.apiV1.entity.MemberInvitationRegisterExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_invitation_register
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member_invitation_register
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member_invitation_register
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.okdi.apiV1.entity.MemberInvitationRegisterExample" >
    delete from member_invitation_register
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.okdi.apiV1.entity.MemberInvitationRegister" >
    insert into member_invitation_register (id, from_member_id, from_member_phone, 
      from_member_role_id, to_member_phone, to_member_role_id, 
      to_member_net_id, create_time, modity_time
      )
    values (#{id,jdbcType=BIGINT}, #{fromMemberId,jdbcType=BIGINT}, #{fromMemberPhone,jdbcType=VARCHAR}, 
      #{fromMemberRoleId,jdbcType=SMALLINT}, #{toMemberPhone,jdbcType=VARCHAR}, #{toMemberRoleId,jdbcType=SMALLINT}, 
      #{toMemberNetId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{modityTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.okdi.apiV1.entity.MemberInvitationRegister" >
    insert into member_invitation_register
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fromMemberId != null" >
        from_member_id,
      </if>
      <if test="fromMemberPhone != null" >
        from_member_phone,
      </if>
      <if test="fromMemberRoleId != null" >
        from_member_role_id,
      </if>
      <if test="toMemberPhone != null" >
        to_member_phone,
      </if>
      <if test="toMemberRoleId != null" >
        to_member_role_id,
      </if>
      <if test="toMemberNetId != null" >
        to_member_net_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modityTime != null" >
        modity_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fromMemberId != null" >
        #{fromMemberId,jdbcType=BIGINT},
      </if>
      <if test="fromMemberPhone != null" >
        #{fromMemberPhone,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberRoleId != null" >
        #{fromMemberRoleId,jdbcType=SMALLINT},
      </if>
      <if test="toMemberPhone != null" >
        #{toMemberPhone,jdbcType=VARCHAR},
      </if>
      <if test="toMemberRoleId != null" >
        #{toMemberRoleId,jdbcType=SMALLINT},
      </if>
      <if test="toMemberNetId != null" >
        #{toMemberNetId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modityTime != null" >
        #{modityTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.okdi.apiV1.entity.MemberInvitationRegisterExample" resultType="java.lang.Integer" >
    select count(*) from member_invitation_register
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update member_invitation_register
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fromMemberId != null" >
        from_member_id = #{record.fromMemberId,jdbcType=BIGINT},
      </if>
      <if test="record.fromMemberPhone != null" >
        from_member_phone = #{record.fromMemberPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.fromMemberRoleId != null" >
        from_member_role_id = #{record.fromMemberRoleId,jdbcType=SMALLINT},
      </if>
      <if test="record.toMemberPhone != null" >
        to_member_phone = #{record.toMemberPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.toMemberRoleId != null" >
        to_member_role_id = #{record.toMemberRoleId,jdbcType=SMALLINT},
      </if>
      <if test="record.toMemberNetId != null" >
        to_member_net_id = #{record.toMemberNetId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modityTime != null" >
        modity_time = #{record.modityTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update member_invitation_register
    set id = #{record.id,jdbcType=BIGINT},
      from_member_id = #{record.fromMemberId,jdbcType=BIGINT},
      from_member_phone = #{record.fromMemberPhone,jdbcType=VARCHAR},
      from_member_role_id = #{record.fromMemberRoleId,jdbcType=SMALLINT},
      to_member_phone = #{record.toMemberPhone,jdbcType=VARCHAR},
      to_member_role_id = #{record.toMemberRoleId,jdbcType=SMALLINT},
      to_member_net_id = #{record.toMemberNetId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modity_time = #{record.modityTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.okdi.apiV1.entity.MemberInvitationRegister" >
    update member_invitation_register
    <set >
      <if test="fromMemberId != null" >
        from_member_id = #{fromMemberId,jdbcType=BIGINT},
      </if>
      <if test="fromMemberPhone != null" >
        from_member_phone = #{fromMemberPhone,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberRoleId != null" >
        from_member_role_id = #{fromMemberRoleId,jdbcType=SMALLINT},
      </if>
      <if test="toMemberPhone != null" >
        to_member_phone = #{toMemberPhone,jdbcType=VARCHAR},
      </if>
      <if test="toMemberRoleId != null" >
        to_member_role_id = #{toMemberRoleId,jdbcType=SMALLINT},
      </if>
      <if test="toMemberNetId != null" >
        to_member_net_id = #{toMemberNetId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modityTime != null" >
        modity_time = #{modityTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.okdi.apiV1.entity.MemberInvitationRegister" >
    update member_invitation_register
    set from_member_id = #{fromMemberId,jdbcType=BIGINT},
      from_member_phone = #{fromMemberPhone,jdbcType=VARCHAR},
      from_member_role_id = #{fromMemberRoleId,jdbcType=SMALLINT},
      to_member_phone = #{toMemberPhone,jdbcType=VARCHAR},
      to_member_role_id = #{toMemberRoleId,jdbcType=SMALLINT},
      to_member_net_id = #{toMemberNetId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modity_time = #{modityTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id = "queryIsRegistered" resultType="net.okdi.apiV1.entity.MemberInvitationRegister" >
  
  select from_member_id as fromMemberId,to_member_phone as toMemberPhone, is_registered as isRegistered 
  from member_invitation_register where from_member_id = #{memberId} 
  
  </select>
</mapper>