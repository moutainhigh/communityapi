package net.okdi.api.dao;

import java.util.List;
import java.util.Map;

import net.okdi.api.entity.RobInfo;

import org.apache.ibatis.annotations.Param;

public interface RobInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rob_broadcast_info
     *
     * @mbggenerated Wed Jun 17 13:04:56 CST 2015
     */
    int deleteByPrimaryKey(Long broadcastId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rob_broadcast_info
     *
     * @mbggenerated Wed Jun 17 13:04:56 CST 2015
     */
    int insert(RobInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rob_broadcast_info
     *
     * @mbggenerated Wed Jun 17 13:04:56 CST 2015
     */
    int insertSelective(RobInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rob_broadcast_info
     *
     * @mbggenerated Wed Jun 17 13:04:56 CST 2015
     */
    RobInfo selectByPrimaryKey(Long broadcastId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rob_broadcast_info
     *
     * @mbggenerated Wed Jun 17 13:04:56 CST 2015
     */
    int updateByPrimaryKeySelective(RobInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rob_broadcast_info
     *
     * @mbggenerated Wed Jun 17 13:04:56 CST 2015
     */
    int updateByPrimaryKey(RobInfo record);
    int cancelRob(@Param("broadcastId")Long broadcastId,@Param("memberId")Long memberId,@Param("dateStr")String dateStr);
    List<Map<String,Object>> queryRob(@Param("memberId")Long memberId,@Param("dateStr")String dateStr);
    int rob(@Param("broadcastId")Long broadcastId,@Param("compId")Long compId,@Param("memberId")Long memberId,@Param("dateStr")String dateStr);
    int updateTimeoutStatus(Long broadcastId);
}