package net.okdi.api.dao;



import java.util.List;
import java.util.Map;

import net.okdi.api.entity.ShopBroadcastInfo;

import org.apache.ibatis.annotations.Param;

public interface ShopBroadcastInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_broadcast_info
     *
     * @mbggenerated Wed Jul 22 12:38:40 CST 2015
     */
    int deleteByPrimaryKey(Long broadcastId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_broadcast_info
     *
     * @mbggenerated Wed Jul 22 12:38:40 CST 2015
     */
    int insert(ShopBroadcastInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_broadcast_info
     *
     * @mbggenerated Wed Jul 22 12:38:40 CST 2015
     */
    int insertSelective(ShopBroadcastInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_broadcast_info
     *
     * @mbggenerated Wed Jul 22 12:38:40 CST 2015
     */
    ShopBroadcastInfo selectByPrimaryKey(Long broadcastId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_broadcast_info
     *
     * @mbggenerated Wed Jul 22 12:38:40 CST 2015
     */
    int updateByPrimaryKeySelective(ShopBroadcastInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_broadcast_info
     *
     * @mbggenerated Wed Jul 22 12:38:40 CST 2015
     */
    int updateByPrimaryKey(ShopBroadcastInfo record);

    
    /**
     * 抢送货(进行中,以完成)
     * @param params
     * @return
     */
    List<Map> queryTakeDeliveryStation(Map<String, Object> params);
    
    /**
     * 计算总数
     * @param params
     * @return
     */
    Integer selectCount(Map<String, Object> params);
    
    /**
     * 抢单
     * @param params
     * @return
     */
    List  querySingleDetails(Map<String, Object> params);
    
    /**
     * 代取件
     * @param params
     * @return
     */
    List<ShopBroadcastInfo> queryShopBroadcastInfoById(Map<String, Object> params);
    
    /**
     * 抢
     * @param map
     */
    int rob(Map<String,Object> map);
    
    /**
     * 确认取件
     * @param map
     */
    int take(Map<String,Object> map);
    
    /**
     * 根据 memberId 查询
     * @param memberId
     * @return
     */
    ShopBroadcastInfo findByMemberId(Long memberId);


    //根据广播id查询订单详情
    public Map selectOrderDetailById(@Param("broadcastId")Long broadcastId);
    

    
    
    /**
     * 		查询抢送货列表
     * @param memberId
     * 			送派员id
     * @return
     */
    Integer selectGrabDeliveryCount(Long memberId);
    
    /**
     * 		查询待收货列表
     * @param memberId
     * 			收派员id
     * @return
     */
    List<Map> selectGrabDeliveryByMemberId(Long memberId);
    
    /**
     * 		确定送达
     * @param grabDeliveryId
     * 			广播id
     * @param memberId
     * 			送派员id
     */	
    int updateConfigDelivery(@Param("broadcastId") Long broadcastId,@Param("memberId") Long memberId,@Param("currentTime") String currentTime);
    
    /**
     * 		取消广播
     * @param broadcastId
     * 			广播id
     * @return
     */
    int cancelBroadcast(@Param("broadcastId") Long broadcastId,@Param("currentTime") String currentTime);
    
    /**
     * 	订单统计类型：已抢订单、进行中订单和已完成订单，不包含已取消订单；
     * @param memberId
     * 			派送员id
     * @return
     */
    Integer orderStatistics(Long memberId);
    
    /**
     * 	今日订单：统计最后一次刷新的今日订订单数量；历史订单：从注册账号开始的订单数量
     * @return
     */
    Integer todayOrder(Map<String,Object> map);
    
    /**
     * 	根据广播Id查所有的memberId
     */
    List<Long> selectMemberIdByBroadcastId(Long broadcastId);
    
    /**
     * 	查询所有
     * @return
     */
    List<Map> selectAllShopBroadcastInfo();
    
    
    
    /**
     * 	根据广播Id查送派员Id
     */
    Long queryMemberIdByBroadCastId(Long broadcastId);

}