<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.okdi.api.dao.NetLowestPriceMapper" >
  <resultMap id="BaseResultMap" type="net.okdi.api.entity.NetLowestPrice" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="from_address_id" property="fromAddressId" jdbcType="BIGINT" />
    <result column="to_address_id" property="toAddressId" jdbcType="BIGINT" />
    <result column="first_freight" property="firstFreight" jdbcType="SMALLINT" />
    <result column="continue_freight" property="continueFreight" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, from_address_id, to_address_id, first_freight, continue_freight
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.okdi.api.entity.NetLowestPriceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from net_lowest_price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from net_lowest_price
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from net_lowest_price
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="net.okdi.api.entity.NetLowestPriceExample" >
    delete from net_lowest_price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.okdi.api.entity.NetLowestPrice" >
    insert into net_lowest_price (id, from_address_id, to_address_id, 
      first_freight, continue_freight)
    values (#{id,jdbcType=BIGINT}, #{fromAddressId,jdbcType=BIGINT}, #{toAddressId,jdbcType=BIGINT}, 
      #{firstFreight,jdbcType=SMALLINT}, #{continueFreight,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="net.okdi.api.entity.NetLowestPrice" >
    insert into net_lowest_price
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fromAddressId != null" >
        from_address_id,
      </if>
      <if test="toAddressId != null" >
        to_address_id,
      </if>
      <if test="firstFreight != null" >
        first_freight,
      </if>
      <if test="continueFreight != null" >
        continue_freight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fromAddressId != null" >
        #{fromAddressId,jdbcType=BIGINT},
      </if>
      <if test="toAddressId != null" >
        #{toAddressId,jdbcType=BIGINT},
      </if>
      <if test="firstFreight != null" >
        #{firstFreight,jdbcType=SMALLINT},
      </if>
      <if test="continueFreight != null" >
        #{continueFreight,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.okdi.api.entity.NetLowestPriceExample" resultType="java.lang.Integer" >
    select count(*) from net_lowest_price
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update net_lowest_price
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fromAddressId != null" >
        from_address_id = #{record.fromAddressId,jdbcType=BIGINT},
      </if>
      <if test="record.toAddressId != null" >
        to_address_id = #{record.toAddressId,jdbcType=BIGINT},
      </if>
      <if test="record.firstFreight != null" >
        first_freight = #{record.firstFreight,jdbcType=SMALLINT},
      </if>
      <if test="record.continueFreight != null" >
        continue_freight = #{record.continueFreight,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update net_lowest_price
    set id = #{record.id,jdbcType=BIGINT},
      from_address_id = #{record.fromAddressId,jdbcType=BIGINT},
      to_address_id = #{record.toAddressId,jdbcType=BIGINT},
      first_freight = #{record.firstFreight,jdbcType=SMALLINT},
      continue_freight = #{record.continueFreight,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.okdi.api.entity.NetLowestPrice" >
    update net_lowest_price
    <set >
      <if test="fromAddressId != null" >
        from_address_id = #{fromAddressId,jdbcType=BIGINT},
      </if>
      <if test="toAddressId != null" >
        to_address_id = #{toAddressId,jdbcType=BIGINT},
      </if>
      <if test="firstFreight != null" >
        first_freight = #{firstFreight,jdbcType=SMALLINT},
      </if>
      <if test="continueFreight != null" >
        continue_freight = #{continueFreight,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.okdi.api.entity.NetLowestPrice" >
    update net_lowest_price
    set from_address_id = #{fromAddressId,jdbcType=BIGINT},
      to_address_id = #{toAddressId,jdbcType=BIGINT},
      first_freight = #{firstFreight,jdbcType=SMALLINT},
      continue_freight = #{continueFreight,jdbcType=SMALLINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id = "queryLowestPrice" parameterType="java.util.HashMap" resultMap="BaseResultMap">
      select
    <include refid="Base_Column_List" />
    from net_lowest_price where from_address_id = #{sendProvinceId} and to_address_id =#{recProvinceId}
  
  
  </select>
  
  
</mapper>